// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 3.0.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var C = {
    launchUrlString(urlString, mode) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, t1;
      var $async$launchUrlString = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (mode === B.LaunchMode_1)
                t1 = !(B.JSString_methods.startsWith$1(urlString, "https:") || B.JSString_methods.startsWith$1(urlString, "http:"));
              else
                t1 = false;
              if (t1)
                throw A.wrapException(A.ArgumentError$value(urlString, "urlString", "To use an in-app web view, you must provide an http(s) URL."));
              $async$returnValue = $.$get$UrlLauncherPlatform__instance().launchUrl$2(urlString, new A.LaunchOptions(A.convertLaunchMode(mode), new A.InAppWebViewConfiguration(true, true, B.Map_empty3), null));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$launchUrlString, $async$completer);
    },
    canLaunchUrlString(urlString) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$canLaunchUrlString = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.$get$UrlLauncherPlatform__instance().canLaunch$1(urlString);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$canLaunchUrlString, $async$completer);
    }
  },
  A, B;
  C = hunkHelpers.updateHolder(holdersList[9], C);
  A = holdersList[0];
  B = holdersList[2];
  var typesOffset = hunkHelpers.updateTypes([]);
  var type$ = {
    bool: A.findType("bool")
  };
};

$__dart_deferred_initializers__["5KQW2Sl7VV5mqzG7oSk4eIiiHh0="] = $__dart_deferred_initializers__.current
